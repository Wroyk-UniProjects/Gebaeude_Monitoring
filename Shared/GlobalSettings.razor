@page "/globalsettings"

<div class="flex w-full justify-center">
	<div class="w-60">
		<h1 class="text-center font-bold text-xl my-5">Global Settings</h1>

		<!-- Temperature -->
		<p class="text-center text-xl">Target Temperature:</p>
		<div class="flex items-center mb-4">
			<button @onclick="decrementTemp" class="minus-btn">-</button>
			<p class="settings-values">@cnfg.TargetTemper</p>
			<button @onclick="incrementTemp" class="plus-btn">+</button>
			<span class="mx-auto w-12 text-xl font-bold">°C</span>
		</div>

		<!-- Humidity -->
		<p class="text-center text-xl">Target Humidity:</p>
		<div class="flex items-center mb-4">
			<button @onclick="decrementHumi" class="minus-btn">-</button>
			<p class="settings-values">@cnfg.TargetHumid</p>
			<button @onclick="incrementHumi" class="plus-btn">+</button>
			<span class="mx-auto w-12 text-xl font-bold">%</span>
		</div>

		<!-- Update Rate -->
		<p class="text-center text-xl">Update Rate:</p>
		<div class="flex items-center mb-4">
			<button @onclick="decrementUpdate" class="minus-btn">-</button>
			<p class="settings-values">@cnfg.UpdateRate</p>
			<button @onclick="incrementUpdate" class="plus-btn">+</button>
			<span class="mx-auto w-12 text-xl font-bold">Sec.</span>
		</div>

		<!-- Tolerance -->
		<p class="text-center text-xl">Tolerance:</p>
		<div class="flex items-center mb-4">
			<button @onclick="decrementTole" class="minus-btn">-</button>
			<p class="settings-values">@tolerance</p>
			<button @onclick="incrementTole" class="plus-btn">+</button>
			<span class="mx-auto w-12 text-xl font-bold">+/-</span>
		</div>

		<!-- Save and Cancel Buttons -->
		<div class="flex flex-col justify-center">
			<button @onclick="saveChanges" class="m-3 py-1 bg-sky-500 border-2 rounded-full text-center font-bold hover:text-gray-700 focus:text-gray-700">Save</button>
			<button @onclick="undoChanges" class="mx-6 py-1 bg-gray-200 rounded-full">Cancel</button>
		</div>
	</div>
</div>

@code {
	public Config oldCnfg { get; set; } = new Config();
	public Config cnfg { get; set; } = new Config();
	private double tolerance;

	[Inject]
	public IConfigService CnfgService { get; set; }

	protected async override Task OnInitializedAsync()
	{

		oldCnfg = await CnfgService.GetConfig();
		cnfg = await CnfgService.GetConfig();
		tolerance = Math.Abs(Math.Truncate((cnfg.UpperToleranceTemper-cnfg.TargetTemper) * 100) / 100);

	}
	// Temperature Buttons - functionallity
	private void decrementTemp() { cnfg.TargetTemper -= 0.5; }
	private void incrementTemp() { cnfg.TargetTemper += 0.5; }

	// Humidity Buttons - functionallity
	private void decrementHumi() { cnfg.TargetHumid -= 0.5; }
	private void incrementHumi() { cnfg.TargetHumid += 0.5; }

	// Update Rate Buttons - functionallity
	private void decrementUpdate() { cnfg.UpdateRate -= 1; }
	private void incrementUpdate() { cnfg.UpdateRate += 1; }

	// Tolerance Buttons - functionallity
	private void decrementTole() { tolerance -= 0.5; updateCnfg(); }
	private void incrementTole() { tolerance += 0.5; updateCnfg(); }

	private void updateCnfg()
	{
		cnfg.UpperToleranceTemper = cnfg.TargetTemper + tolerance;
		cnfg.LowerToleranceTemper = cnfg.TargetTemper - tolerance;
		cnfg.UpperToleranceHumid = cnfg.TargetHumid + tolerance;
		cnfg.LowerToleranceHumid = cnfg.TargetHumid - tolerance;
	}

	// Save and Cancel Button - functionallity
	private void saveChanges() { CnfgService.PatchConfig(cnfg); }
	private async void undoChanges() { cnfg = new Config(oldCnfg); }
}
